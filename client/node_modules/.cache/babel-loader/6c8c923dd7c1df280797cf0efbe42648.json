{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ilyamez/Google Drive/DEV/react-express-sample-app/client/src/containers/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutForm from '../components/CheckoutForm';\n\nfunction Checkout(props) {\n  _s();\n\n  const [stripeSecret, setSecret] = useState(\"\");\n  const stripePromise = loadStripe(\"pk_test_51I2gMbB70f2zG2EYkDKLAsZKsQfVNBPhKcRADowl1CZNCVtEeZtr3GaZzBS0YEKe5OqiT6RXKiYVmJCwbnN3wjPU00tXraIPA6\");\n  useEffect(() => {\n    getPaymentIntent(); // get Stripe Secret\n  }, []);\n\n  const getPaymentIntent = () => {\n    //fetch(`https://api.parse.com/1/users?foo=${encodeURIComponent(data.foo)}&bar=${encodeURIComponent(data.bar)}`, {\n    fetch('http://localhost:9000/orders/orderIntent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      //body: JSON.stringify(props.checkoutBook)\n      body: JSON.stringify({\n        bookId: props.checkoutBook\n      })\n    }).then(res => res.json()).then(result => setSecret(result.client_secret)).catch(err => console.log('error in secret fetch' + err));\n  };\n\n  const getOrderStatus = newOrderStatus => {\n    props.onOrderPlaced(newOrderStatus);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Checkout form \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Book: \", props.checkoutBook]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutForm, {\n      onOrderPlaced: getOrderStatus,\n      bookId: props.checkoutBook,\n      stripeSecret: stripeSecret\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkout, \"YRxImBYJs0p+9dqZVey+r2lZ5mI=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/ilyamez/Google Drive/DEV/react-express-sample-app/client/src/containers/Checkout.js"],"names":["React","useState","useEffect","Elements","loadStripe","CheckoutForm","Checkout","props","stripeSecret","setSecret","stripePromise","getPaymentIntent","fetch","method","headers","body","JSON","stringify","bookId","checkoutBook","then","res","json","result","client_secret","catch","err","console","log","getOrderStatus","newOrderStatus","onOrderPlaced"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAEtB,QAAM,CAACC,YAAD,EAAeC,SAAf,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMS,aAAa,GAAGN,UAAU,CAAC,6GAAD,CAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB,GADF,CACK;AACpB,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,gBAAgB,GAAG,MAAM;AAC7B;AAEAC,IAAAA,KAAK,CAAC,0CAAD,EAA6C;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACN,wBAAgB;AADV,OAFuC;AAKhD;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAEX,KAAK,CAACY;AADK,OAAf;AAN0C,KAA7C,CAAL,CAUGC,IAVH,CAUSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVjB,EAWGF,IAXH,CAWSG,MAAD,IAAYd,SAAS,CAACc,MAAM,CAACC,aAAR,CAX7B,EAYGC,KAZH,CAYUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,0BAAwBF,GAApC,CAZlB;AAaD,GAhBD;;AAkBA,QAAMG,cAAc,GAAIC,cAAD,IAAoB;AACzCvB,IAAAA,KAAK,CAACwB,aAAN,CAAoBD,cAApB;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEpB,aAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2BAAUH,KAAK,CAACY,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,aAAa,EAAEU,cAA7B;AAA6C,MAAA,MAAM,EAAEtB,KAAK,CAACY,YAA3D;AAAyE,MAAA,YAAY,EAAEX;AAAvF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxCQF,Q;;KAAAA,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport CheckoutForm from '../components/CheckoutForm';\n\n\nfunction Checkout(props){\n  \t  \n  const [stripeSecret, setSecret] = useState(\"\");\n\n  const stripePromise = loadStripe(\"pk_test_51I2gMbB70f2zG2EYkDKLAsZKsQfVNBPhKcRADowl1CZNCVtEeZtr3GaZzBS0YEKe5OqiT6RXKiYVmJCwbnN3wjPU00tXraIPA6\");\n  \n  useEffect(() => {\n    getPaymentIntent() // get Stripe Secret\n  }, []);\n  \n\n  const getPaymentIntent = () => {\n    //fetch(`https://api.parse.com/1/users?foo=${encodeURIComponent(data.foo)}&bar=${encodeURIComponent(data.bar)}`, {\n\n    fetch('http://localhost:9000/orders/orderIntent', {\n      method: 'POST',\n      headers: {\n\t        'Content-Type': 'application/json',\n\t      },\n      //body: JSON.stringify(props.checkoutBook)\n      body: JSON.stringify({\n        bookId: props.checkoutBook, \n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => setSecret(result.client_secret))\n      .catch((err) => console.log('error in secret fetch'+err))\n  }\n\n  const getOrderStatus = (newOrderStatus) => {\n    props.onOrderPlaced(newOrderStatus);\n  }\n\n  return (\n    <Elements stripe={stripePromise}>\n      <h2> Checkout form </h2>\n      <p>Book: {props.checkoutBook}</p>\n      <CheckoutForm onOrderPlaced={getOrderStatus} bookId={props.checkoutBook} stripeSecret={stripeSecret} />\n    </Elements>\n  );\n}\n\nexport default Checkout; \n\n\n"]},"metadata":{},"sourceType":"module"}