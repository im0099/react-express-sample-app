{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ilyamez/Google Drive/DEV/react-express-sample-app/client/src/containers/Checkout.js\";\nimport React from 'react';\n\nfunction Checkout(props) {\n  var _s = $RefreshSig$();\n\n  console.log(\"In Checkout\");\n\n  const handleSubmit = event => {\n    _s();\n\n    useEffect(() => {\n      // POST request using fetch inside useEffect React hook\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: 'React Hooks POST Request Example'\n        })\n      };\n      fetch('https://localhost:9000/orders', requestOptions).then(response => response.json()).then(data => setPostId(data.id)); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n    }, []);\n    /* fetch('https://localhost:9000/orders', {\n         method: 'POST',\n         // We convert the React state to JSON and send it as the POST body\n         body: JSON.stringify(props.checkoutBook)\n       }).then(function(response) {\n         console.log(response)\n         return response.json();\n       });\n      event.preventDefault();\n     */\n  };\n\n  _s(handleSubmit, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Book: \", props.checkoutBook]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"id\",\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"id\",\n          defaultValue: props.checkoutBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"payment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"card-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"card-errors\",\n        role: \"alert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit\",\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/ilyamez/Google Drive/DEV/react-express-sample-app/client/src/containers/Checkout.js"],"names":["React","Checkout","props","console","log","handleSubmit","event","useEffect","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","json","data","setPostId","id","checkoutBook"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AAGA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE9BC,IAAAA,SAAS,CAAC,MAAM;AAChB;AACA,YAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAf;AAHa,OAAvB;AAKAC,MAAAA,KAAK,CAAC,+BAAD,EAAkCP,cAAlC,CAAL,CACKQ,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIC,SAAS,CAACD,IAAI,CAACE,EAAN,CAF3B,EAPgB,CAWpB;AACC,KAZY,EAYV,EAZU,CAAT;AAcD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG,GA3BD;;AALsB,KAKhBhB,YALgB;;AAkCtB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2BAAUH,KAAK,CAACoB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEjB,YAAhB;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACI;AAAO,UAAA,GAAG,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,IAAZ;AAAiB,UAAA,YAAY,EAAEH,KAAK,CAACoB;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAYE;AAAM,MAAA,EAAE,EAAC,cAAT;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,EAAE,EAAC,aAAR;AAAsB,QAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;KAzDQrB,Q;AA2DT,eAAeA,QAAf","sourcesContent":["import React from 'react'\n\nfunction Checkout(props){\n  \n  console.log(\"In Checkout\");\n\t\n  \n  const handleSubmit = (event) => {\n    \n    useEffect(() => {\n    // POST request using fetch inside useEffect React hook\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: 'React Hooks POST Request Example' })\n    };\n    fetch('https://localhost:9000/orders', requestOptions)\n        .then(response => response.json())\n        .then(data => setPostId(data.id));\n\n// empty dependency array means this effect will only run once (like componentDidMount in classes)\n}, []);\n\n   /* fetch('https://localhost:9000/orders', {\n        method: 'POST',\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify(props.checkoutBook)\n      }).then(function(response) {\n        console.log(response)\n        return response.json();\n      });\n\n    event.preventDefault();\n    */\n  }\n\n  return (\n    <div>\n      <h2>Checkout</h2>\n      <p>Book: {props.checkoutBook}</p>\n      <form onSubmit={handleSubmit}>\n        <div class=\"form-group\">\n            <label for=\"id\">ID</label>\n            <input name=\"id\" defaultValue={props.checkoutBook} />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n\n\n      <form id=\"payment-form\">\n          <div id=\"card-element\">\n          </div>\n\n          <div id=\"card-errors\" role=\"alert\"></div>\n\n          <button id=\"submit\">Pay</button>\n        </form>\n    </div>\n  )\n}\n\nexport default Checkout; \n\n"]},"metadata":{},"sourceType":"module"}