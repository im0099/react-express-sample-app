{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ilyamez/Google Drive/DEV/react-express-sample-app/client/src/containers/MainContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport BookContainer from './BookContainer';\nimport OrderConfirmation from '../components/OrderConfirmation';\nimport OrdersContainer from './OrdersContainer';\n\nfunction MainContainer(props) {\n  _s();\n\n  const BOOKS = [{\n    id: '20201223',\n    title: 'Stripe APIs',\n    author: 'Ilya Mez',\n    numOfPages: '472',\n    price: '$12.99'\n  }, {\n    id: '20201224',\n    title: 'Future of Stripe',\n    author: 'Ilya Mez',\n    numOfPages: '232',\n    price: '$114.99'\n  }, {\n    id: '20201225',\n    title: \"What's next for Stripe Capital\",\n    author: 'Ilya Mez',\n    numOfPages: '15',\n    price: '$24.99'\n  }];\n  /*\n    const orders = [\n    \t{ id: '1',\n  \t  item: '20201223'},\n  \t { id: '2',\n  \t  item: '20201224'}\n  \t];\n  */\n\n  const [orders, setOrders] = useState([]);\n  const [orderStatus, setOrderStatus] = useState(\"\");\n  useEffect(() => {\n    fetchOrders(); // Fetch orders\n  }, []);\n\n  const fetchOrders = () => {\n    fetch('http://localhost:9000/orders', {\n      method: 'GET'\n    }).then(res => res.json()).then(result => setOrders(result)).catch(err => console.log('error in fetch' + err));\n  };\n\n  const updateBook = bookId => {\n    props.onBookSelection(bookId);\n  };\n\n  const getOrderStatus = orderStatus => {\n    setOrderStatus(orderStatus);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BookContainer, {\n      books: BOOKS,\n      onBookSelection: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderConfirmation, {\n      message: orderStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrdersContainer, {\n      onOrderPlaced: getOrderStatus,\n      orders: orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"+Mleo+g4ZG7G4AT+bUc3WjwoCC0=\");\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/ilyamez/Google Drive/DEV/react-express-sample-app/client/src/containers/MainContainer.js"],"names":["React","useState","useEffect","BookContainer","OrderConfirmation","OrdersContainer","MainContainer","props","BOOKS","id","title","author","numOfPages","price","orders","setOrders","orderStatus","setOrderStatus","fetchOrders","fetch","method","then","res","json","result","catch","err","console","log","updateBook","bookId","onBookSelection","getOrderStatus"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,eAAP,MAA6B,mBAA7B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AAE5B,QAAMC,KAAK,GAAG,CACd;AAAEC,IAAAA,EAAE,EAAE,UAAN;AACEC,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,MAAM,EAAE,UAFV;AAGEC,IAAAA,UAAU,EAAE,KAHd;AAIEC,IAAAA,KAAK,EAAE;AAJT,GADc,EAMb;AAAEJ,IAAAA,EAAE,EAAE,UAAN;AACCC,IAAAA,KAAK,EAAE,kBADR;AAECC,IAAAA,MAAM,EAAE,UAFT;AAGCC,IAAAA,UAAU,EAAE,KAHb;AAICC,IAAAA,KAAK,EAAE;AAJR,GANa,EAWb;AAAEJ,IAAAA,EAAE,EAAE,UAAN;AACCC,IAAAA,KAAK,EAAE,gCADR;AAECC,IAAAA,MAAM,EAAE,UAFT;AAGCC,IAAAA,UAAU,EAAE,IAHb;AAICC,IAAAA,KAAK,EAAE;AAJR,GAXa,CAAd;AAkBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,GADG,CACA;AACf,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,WAAW,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,MAAAA,MAAM,EAAE;AAD4B,KAAjC,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,MAAD,IAAYT,SAAS,CAACS,MAAD,CAJ7B,EAKGC,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,mBAAiBF,GAA7B,CALlB;AAMD,GAPD;;AAUA,QAAMG,UAAU,GAAIC,MAAD,IAAY;AAC3BvB,IAAAA,KAAK,CAACwB,eAAN,CAAsBD,MAAtB;AACH,GAFD;;AAIA,QAAME,cAAc,GAAIhB,WAAD,IAAiB;AACpCC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAER,KAAtB;AAA6B,MAAA,eAAe,EAAEqB;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAmB,MAAA,OAAO,EAAEb;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,eAAD;AAAiB,MAAA,aAAa,EAAEgB,cAAhC;AAAgD,MAAA,MAAM,EAAElB;AAAxD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhEQR,a;;KAAAA,a;AAkET,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BookContainer from './BookContainer'\nimport OrderConfirmation from '../components/OrderConfirmation'\nimport OrdersContainer from  './OrdersContainer'\n\nfunction MainContainer(props){\n  \n const BOOKS = [\n\t{ id: '20201223',\n\t  title: 'Stripe APIs',\n\t  author: 'Ilya Mez',\n\t  numOfPages: '472',\n\t  price: '$12.99' },\n\t { id: '20201224',\n\t  title: 'Future of Stripe',\n\t  author: 'Ilya Mez',\n\t  numOfPages: '232',\n\t  price: '$114.99' },\n\t { id: '20201225',\n\t  title: \"What's next for Stripe Capital\",\n\t  author: 'Ilya Mez',\n\t  numOfPages: '15',\n\t  price: '$24.99' }\n  ];\n\n/*\n  const orders = [\n  \t{ id: '1',\n\t  item: '20201223'},\n\t { id: '2',\n\t  item: '20201224'}\n\t];\n*/\n\n\n\n  const [orders, setOrders] = useState([]);\n  const [orderStatus, setOrderStatus] = useState(\"\");\n\n  useEffect(() => {\n    fetchOrders() // Fetch orders\n  }, []);\n  \n\n  const fetchOrders = () => {\n    fetch('http://localhost:9000/orders', {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((result) => setOrders(result))\n      .catch((err) => console.log('error in fetch'+err))\n  }\n  \n\n  const updateBook = (bookId) => {\n      props.onBookSelection(bookId);\n  }\n\n  const getOrderStatus = (orderStatus) => {\n      setOrderStatus(orderStatus);\n  }\n\n  return (\n    <div>\n      <BookContainer books={BOOKS} onBookSelection={updateBook}/>\n      <OrderConfirmation message={orderStatus}/>\n      <OrdersContainer onOrderPlaced={getOrderStatus} orders={orders}/>\n    </div>\n  )\n}\n\nexport default MainContainer; \n\n"]},"metadata":{},"sourceType":"module"}