{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ilyamez/Google Drive/DEV/react-express-sample-app/client/src/components/BookCard.js\";\n\n/*import React from 'react'\n\nclass BookCard extends React.Component {\n\n  render(){\n    return (\n      <div className=\"book-card\">\n        <h4>{this.props.book.title}</h4>\n        <h4>{this.props.book.price}</h4>\n        <form id=\"payment-form\">\n      <div id=\"card-element\">\n      </div>\n\n      <div id=\"card-errors\" role=\"alert\"></div>\n\n      <button id=\"submit\">Pay</button>\n    </form>\n      </div>\n    )\n  }\n}\n\nexport default BookCard\n*/\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe, StripeProvider, Elements } from 'react-stripe-elements'; // You can customize your Elements to give it the look and feel of your site.\n\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        fontFamily: 'Open Sans, sans-serif',\n        letterSpacing: '0.025em',\n        '::placeholder': {\n          color: '#aab7c4'\n        }\n      },\n      invalid: {\n        color: '#c23d4b'\n      }\n    }\n  };\n};\n\nclass _CardForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errorMessage: ''\n    };\n\n    this.handleChange = ({\n      error\n    }) => {\n      if (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n\n      if (this.props.stripe) {\n        this.props.stripe.createToken().then(this.props.handleResult);\n      } else {\n        console.log(\"Stripe.js hasn't loaded yet.\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.props.book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.props.book.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Card details\", /*#__PURE__*/_jsxDEV(CardElement, {\n            onChange: this.handleChange,\n            ...createOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          role: \"alert\",\n          children: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst CardForm = injectStripe(_CardForm);\n_c = CardForm;\nexport class CardDemo extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(StripeProvider, {\n      apiKey: this.props.stripePublicKey,\n      children: /*#__PURE__*/_jsxDEV(Elements, {\n        children: /*#__PURE__*/_jsxDEV(CardForm, {\n          handleResult: this.props.handleResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default BookCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"sources":["/Users/ilyamez/Google Drive/DEV/react-express-sample-app/client/src/components/BookCard.js"],"names":["React","Component","CardElement","injectStripe","StripeProvider","Elements","createOptions","style","base","fontSize","color","fontFamily","letterSpacing","invalid","_CardForm","state","errorMessage","handleChange","error","setState","message","handleSubmit","evt","preventDefault","props","stripe","createToken","then","handleResult","console","log","render","book","title","price","bind","CardForm","CardDemo","stripePublicKey","BookCard"],"mappings":"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","sourcesContent":["/*import React from 'react'\n\nclass BookCard extends React.Component {\n\n  render(){\n    return (\n      <div className=\"book-card\">\n        <h4>{this.props.book.title}</h4>\n        <h4>{this.props.book.price}</h4>\n        <form id=\"payment-form\">\n      <div id=\"card-element\">\n      </div>\n\n      <div id=\"card-errors\" role=\"alert\"></div>\n\n      <button id=\"submit\">Pay</button>\n    </form>\n      </div>\n    )\n  }\n}\n\nexport default BookCard\n*/\nimport React, {Component} from 'react';\nimport {\n  CardElement,\n  injectStripe,\n  StripeProvider,\n  Elements,\n} from 'react-stripe-elements';\n\n// You can customize your Elements to give it the look and feel of your site.\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        fontFamily: 'Open Sans, sans-serif',\n        letterSpacing: '0.025em',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#c23d4b',\n      },\n    }\n  }\n};\n\nclass _CardForm extends Component {\n  state = {\n    errorMessage: '',\n  };\n\n  handleChange = ({error}) => {\n    if (error) {\n      this.setState({errorMessage: error.message});\n    }\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (this.props.stripe) {\n      this.props.stripe.createToken().then(this.props.handleResult);\n    } else {\n      console.log(\"Stripe.js hasn't loaded yet.\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"book-card\">\n        <h4>{this.props.book.title}</h4>\n        <h4>{this.props.book.price}</h4>\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <label>\n            Card details\n            <CardElement\n              onChange={this.handleChange}\n              {...createOptions()}\n            />\n          </label>\n          <div className=\"error\" role=\"alert\">\n            {this.state.errorMessage}\n          </div>\n          <button>Pay</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst CardForm = injectStripe(_CardForm);\n\nexport class CardDemo extends Component {\n  render() {\n    return (\n      <StripeProvider apiKey={this.props.stripePublicKey}>\n        <Elements>\n          <CardForm handleResult={this.props.handleResult} />\n        </Elements>\n      </StripeProvider>\n    );\n  }\n}\n\n\nexport default BookCard"]},"metadata":{},"sourceType":"module"}